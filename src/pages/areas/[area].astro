---
import lodash from "lodash";
import { google } from "googleapis";
import { z } from "zod";

import questions from "../../data/questions.json";
import { authorize } from "../../google-api";

export async function getStaticPaths() {
  const electoralAreasSchema = z.array(z.string());
  const auth = await authorize();
  const sheets = google.sheets({ version: "v4", auth });
  const electoralAreasResponse = await sheets.spreadsheets.values.get({
    spreadsheetId: import.meta.env.SHEET_ID,
    range: "areas!A1:A11",
  });

  const electoralAreasFromSheet =
    electoralAreasResponse.data.values?.map((row) => row[0]) ?? [];

  try {
    const electoralAreas = electoralAreasSchema.parse(electoralAreasFromSheet);

    return electoralAreas.map((electoralArea) => ({
      params: {
        area: lodash.kebabCase(electoralArea),
      },
      props: {
        area: electoralArea,
      },
    }));
  } catch (error) {
    console.error(error);
    return [];
  }
}

const { area } = Astro.props;
---

<h1>{area}</h1>

{questions.map((question) => <h2>{question}</h2>)}
