---
import lodash, { map } from "lodash";

import {
  airtableClient,
  getLookupFieldValue,
  getStringFieldValue,
} from "../airtable-api";
import Layout from "../layouts/Layout.astro";
import Link from "../components/Link.astro";

const electoralAreas = await airtableClient("Areas")
  .select({
    view: "Grid view",
  })
  .all();

const electoralAreaNames = electoralAreas.map((record) =>
  getStringFieldValue(record, "Name")
);

const dccElectoralAreaNames = electoralAreas
  .filter((electoralArea) => {
    const localAuthorityName = getLookupFieldValue(
      electoralArea,
      "Local Authority Name"
    );

    return localAuthorityName === "Dublin City Council";
  })
  .map((record) => getStringFieldValue(record, "Name"));

const fingalElectoralAreaNames = electoralAreas
  .filter((electoralArea) => {
    const localAuthorityName = getLookupFieldValue(
      electoralArea,
      "Local Authority Name"
    );

    return localAuthorityName === "Fingal County Council";
  })
  .map((record) => getStringFieldValue(record, "Name"));

const candidates = await airtableClient("Candidates")
  .select({
    view: "Grid view",
  })
  .all();

const candidatesByArea = candidates.reduce<Record<string, typeof candidates>>(
  (acc, candidate) => {
    const candidateAreaName = getLookupFieldValue(candidate, "Area name");
    const candidatesInArea = acc[candidateAreaName]
      ? [...acc[candidateAreaName], candidate]
      : [candidate];
    return {
      ...acc,
      [candidateAreaName]: candidatesInArea,
    };
  },
  {}
);
---

<Layout>
  <header class="pt-2 pb-8 px-gutter">
    <h2 class="pb-4">
      We
      <Link
        href="https://dublininquirer.com/2024/03/13/here-are-the-issues-people-say-they-want-us-to-ask-local-election-candidates-about/"
        target="_blank">asked Dubliners</Link
      >
      what they want candidates in the 2024 local elections to talk about as they
      compete for votes, and then posed those questions to the candidates running
      seats on Dublin City Council and Fingal County Council. These are their responses.
    </h2>
    <select
      name="electoral-area"
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg p-2 block w-full"
    >
      <option disabled selected>Choose your electoral area</option>
      <option disabled>Dublin City Council</option>
      {
        dccElectoralAreaNames.map((electoralAreaName) => (
          <option value={lodash.kebabCase(electoralAreaName)}>
            {electoralAreaName}
          </option>
        ))
      }
      <option disabled>Fingal County Council</option>
      {
        fingalElectoralAreaNames.map((electoralAreaName) => (
          <option value={lodash.kebabCase(electoralAreaName)}>
            {electoralAreaName}
          </option>
        ))
      }
    </select>
  </header>
  <main class="px-gutter">
    {
      electoralAreaNames.map((electoralAreaName) => {
        return (
          <>
            <div>
              <p>{electoralAreaName}</p>
            </div>
            <div class="flex flex-wrap">
              {candidatesByArea[electoralAreaName]?.map((candidate) => {
                const candidateFullName = getStringFieldValue(
                  candidate,
                  "Full name"
                );
                return (
                  <div class="p-1">
                    <Link
                      to={`candidates/${lodash.kebabCase(candidateFullName)}`}
                    >
                      <img
                        src="https://picsum.photos/64"
                        class="rounded-full"
                      />
                      <p class="text-xs text-center w-16">
                        {candidateFullName}
                      </p>
                    </Link>
                  </div>
                );
              })}
            </div>
            <hr />
          </>
        );
      })
    }
  </main>
</Layout>
<script>
  const selectElement = document.querySelector("select[name=electoral-area]");
  selectElement?.addEventListener("change", (event) => {
    window.location.href = `${import.meta.env.BASE_URL}/areas/${(event.target as HTMLSelectElement).value}`;
  });
</script>
